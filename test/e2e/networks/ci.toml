# This testnet is run by CI, and attempts to cover a broad range of
# functionality with a single network.

initial_height = 1000
initial_state = { initial01 = "a", initial02 = "b", initial03 = "c" }

[validators]
validator01 = 100

[validator_update.0]
validator01 = 10
validator02 = 20
validator03 = 30
validator04 = 40

[validator_update.1010]
validator05 = 50

# validator03 gets killed and validator05 has lots of perturbations, so weight them low.
[validator_update.1020]
validator01 = 100
validator02 = 100
validator03 = 50
validator04 = 100
validator05 = 50

[node.validator01]
mode = "validator"
snapshot_interval = 5
perturb = ["disconnect"]
misbehaviors = { 1018 = "double-prevote" }

[node.seed01]
mode = "seednode"
seeds = ["seed02"]
persistent_peers = ["validator01"]

[node.seed02]
mode = "seednode"
seeds = ["seed01"]
persistent_peers = ["validator01"]

[node.validator02]
mode = "validator"
seeds = ["seed02"]
database = "boltdb"
abci_protocol = "tcp"
privval_protocol = "tcp"
persist_interval = 0
perturb = ["restart"]

[node.validator03]
mode = "validator"
seeds = ["seed01"]
database = "badgerdb"
abci_protocol = "grpc"
privval_protocol = "unix"
persist_interval = 3
retain_blocks = 3
perturb = ["kill"]

[node.validator04]
mode = "validator"
persistent_peers = ["validator01"]
database = "rocksdb"
abci_protocol = "builtin"
perturb = ["pause"]

[node.validator05]
start_at = 1005 # Becomes part of the validator set at 1010
mode = "validator"
seeds = ["seed02"]
database = "cleveldb"
fast_sync = "v0"
abci_protocol = "grpc"
privval_protocol = "tcp"
perturb = ["kill", "pause", "disconnect", "restart"]

[node.full01]
start_at = 1010
mode = "fullnode"
fast_sync = "v2"
persistent_peers = ["validator01", "validator02", "validator03", "validator04", "validator05", "seed01", "seed02"]
retain_blocks = 1
perturb = ["restart"]

[node.full02]
start_at = 1015
mode = "fullnode"
fast_sync = "v2"
state_sync = true
seeds = ["seed01"]
perturb = ["restart"]
